#!/bin/bash
# shellcheck disable=SC2034
# ^^^ disable "unused variable" warning

## REQUIRED: GitLab Project ID, GitLab Personal Access Token
## OR: GitHub repo name, GitHub Personal Access Token
### NOTE! Only one can exist for the same script, if both, script will stop.
## Comment out the one you're not using
GITLAB_PROJECT_ID=13340096
GITHUB_REPO_NAME=Piskvor/buildenlights

# GitLab personal access token, permission "api"
# - see https://gitlab.com/profile/personal_access_tokens
GITLAB_PERSONAL_ACCESS_TOKEN="aAaAaaAAAAAaaa"
# GitLab domain - for self-hosted instances
#GITLAB_DOMAIN=gitlab.com

# GitHub personal access token, permission "repo"
# - see https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line
GITHUB_PERSONAL_ACCESS_TOKEN="000000000000000000000000000000000"

## RECOMMENDED: one or more branches (or other git refs) to watch
##
REFS="master develop beta eta/pi feature/some_branch v3.14.1"

## OPTIONAL: other variables used in buildenlights.sh
##
# invoke uhubctl without arguments to find the device ID and location - the provided examples probably won't work for you
USB_DEVICE_ID=""
USB_DEVICE_LOCATION="2-1.4"
# "-" disables this feature, number selects a port, "any" switches all ports on the selected device
USB_PORT_SUCCESS="-"
USB_PORT_FAILURE="any"

## INTERMEDIATE: network tweaks and fallback proxy
##
# delay between iterations
DELAY_SECONDS="300"
# delay between requests inside one iteration
DELAY_BETWEEN_REQUESTS="0"
# time in seconds to wait for the API response
REQUEST_TIMEOUT="5"
# if the request doesn't return data, retry via proxy (if any)
#FALLBACK_PROXY="http://proxy.example.com:3128/"
# time to wait for the API response when going through proxy - set this to a larger value, as this is already a fallback
#FALLBACK_PROXY_REQUEST_TIMEOUT="60"
# cURL takes various options, configurable here
#CURL_OPTIONS=(--silent --show-error)

## ADVANCED: if you need to use an executable in a different path, uncomment the following. This is unusual and shouldn't be needed.
##
#UHUBCTL=/usr/local/bin/uhubctl.x86
#CURL=/somewhere/curl
#JQ=/home/user/bin/jq-latest

## EXPERT: define any of your own success/failure on/off function(s). If defined, they will be used instead of the default.
##
#__success_on() {
#    wall "Good news everyone!"
#    __uhubctl_call 1 "${USB_PORT_SUCCESS}"
#    echo "on" >> /tmp/on.log
#}
#
#__failure_on() {
#    wall "I suggest we take off and nuke the entire site from orbit."
#    __uhubctl_call 1 "${USB_PORT_FAILURE}"
#    __uhubctl_call 0 "${USB_PORT_SUCCESS}"
#}

